//zad 1a
import java.util.*;

public class LinkedListDemo
{

    public static void main(String[] args)
    {

        List<String> b = new LinkedList<>();
        b.add("Bartek");
        b.add("Daniel");
        b.add("Franek");
        b.add("Gosia");
        b.add("arab");
        b.add("Zosia");
        b.add("Trab");
        System.out.println(b);
        redukuj((LinkedList<String>) b,2);
        System.out.println(b);

    }
    public static void redukuj(LinkedList<String> pracownicy, int n)
    {
        Iterator<String> bIter =  pracownicy.listIterator();
        int i=1;
        while (bIter.hasNext()) {
            i+=1;
            bIter.next(); // przesuwa się o jeden element
            if (bIter.hasNext()&& i==n) {
                bIter.next(); // przesuwa się do następnego elementu
                bIter.remove(); // i usuwa go
                i=1;
            }
        }
    }
}
//zad 1bc odrazu zrobilem generyczne 
import java.util.*;

public class LinkedListDemo
{

    public static void main(String[] args)
    {

        List<String> b = new LinkedList<>();
        b.add("Bartek");
        b.add("Daniel");
        b.add("Franek");
        b.add("Gosia");
        b.add("arab");
        b.add("Zosia");
        b.add("Trab");
        System.out.println(b);
        odwroc((LinkedList<String>) b);
        System.out.println(b);

    }
    public static <T>void redukuj(LinkedList<T> pracownicy, int n)
    {
        Iterator<T> bIter =  pracownicy.listIterator();
        int i=1;
        while (bIter.hasNext()) {
            i+=1;
            bIter.next(); // przesuwa się o jeden element
            if (bIter.hasNext()&& i==n) {
                bIter.next(); // przesuwa się do następnego elementu
                bIter.remove(); // i usuwa go
                i=1;
            }
        }
    }
    public static <T>void odwroc(LinkedList<T> lista)
    {
        Iterator<T> bIter =  lista.listIterator();
        int i=0;
        T[] array = (T[])new Object[lista.size()];
        while (bIter.hasNext()) {
            array[i]=bIter.next();
            i+=1;
        }
        System.out.println(array.length);
        lista.clear();
        for(int a=array.length-1;a>=0;a--) {
            lista.add(array[a]); 
        }
    }
}
//zad 5 
import java.util.*;
public class LinkedListDemo
{

    public static void main(String[] args)
    {

        Stack<String> b = new Stack<>();
        String c=("Bartek ma psa.I kota");
        String []a=c.split("\\.");
        for(int i=0;i<a.length;i++)
        {
            a[i]=a[i].toLowerCase();
            System.out.println(a[i]);
        }
        List<String> xd=new ArrayList<String>();
        for(int s=0;s<a.length;s++)
        {
            String []xds=a[s].split(" ");
            for(int e=0;e<xds.length;e++)
            {
                xd.add(xds[e]);
            }
            xd.add("&");
        }
        System.out.println(xd);
        for(String word : xd)
        {
            b.push(word);
        }
        int d=0;
        System.out.print(b);
        while(b.empty() == false)
        {
            if(d==0)
            {
                String y=b.peek();
                if(y=="&")
                {
                    b.pop();
                    continue;
                }
                else;
                {
                    System.out.print(y.substring(0, 1).toUpperCase() + y.substring(1)+ " ");
                    d+=1; 
                    b.pop();
                    continue;
                }
            }
            else;
            { 
                String t=b.peek();
                if(t=="&")
                {
                    System.out.print("."); 
                    d=0;
                    b.pop();
                    continue;
                }
                else;
                {
                    System.out.print(t+" ");
                    b.pop();
                }
            }
        }

    }
    public static String capitalize(String str)
{
    if(str == null) return str;
    return str.substring(0, 1).toUpperCase() + str.substring(1);
}

}
//zad 6
import java.util.*;
import java.util.Scanner;
public class coszjava
{

    public static void main(String[] args)
    {

        Stack<Integer> b = new Stack<>();
        Scanner xd = new Scanner(System.in);
        int as=xd.nextInt();
        System.out.println(as%10);
        while(as!=0)
        {
            b.push(as%10);
            as=as/10;
        }
        while(b!=12null)
        {
            System.out.print(b.pop()+ " ");
        }
    }
}
//zad 7
import java.util.*;
public class coszjava
{

    public static void main(String[] args)
    {

        Scanner xd = new Scanner(System.in);
        int as=xd.nextInt();
        List<Integer> list = new ArrayList<Integer>();
        for(int i=2;i<=as;i++)
        {
            list.add(i);
        }
            System.out.print(list+ " ");
            for(int a=2;a<=as;a++)
            {
                for(int h=2;h<=as;h++)
                {
                    if(list.contains(a*h)==true);
                    {
                        int t=list.indexOf(a*h);
                        if(t!=-1)
                        {
                            list.set(t,0);
                        }
                    }
                }
            }
            list.removeIf(n -> (n == 0));
            list.removeIf(n -> (n == 0));
            System.out.print(list+ " ");
    }
}
//zad 8 
import java.util.*;
public class coszjava
{

    public static void main(String[] args)
    {
        List<String> list = new ArrayList<>();

    list.add("one");
    list.add("two");
    list.add("three");
    print(list);
        
    }
     public static <T> void print (Iterable<T>xd)
    {
        for(T item: xd)
        {
            System.out.print(item+",");
        }
    }
}
